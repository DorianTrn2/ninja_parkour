aspect Lag{
	
	pattern "LagMetric" : "void" "MyScene" "update";
	
	 LagMetric::define{
	 #include <chrono>
	 static unsigned short int displayLag = 0;
	 }

	LagMetric::before{
	    auto start = std::chrono::high_resolution_clock::now();
	}
	
	LagMetric::after{
	displayLag++;
        if (displayLag > 150) { 
			auto end_chrono = std::chrono::high_resolution_clock::now();
			std::chrono::duration<double, std::milli> float_ms = end_chrono - start;
			std::cout<<"Lag: "<<float_ms.count()<<"ms."<<std::endl;
			logFile<<"Lag(ms): "<<float_ms.count()<<std::endl;
			displayLag=0;
	}
}
}